- name: configuring shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: installing maven
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - maven
    - mysql
  - name: installing python mysql libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.13
    loop:
    - PyMySQL
    - cryptography


  - name: adding robosho user
    ansible.builtin.user:
        name: roboshop
        comment: roboshop system user
        shell: /sbin/nologin
        system: true
        home: /app

   # removing the directory , if we run 2 nd time it will doenload freshly.
  - name: removing the app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: creating the app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: removing the shipping application
    ansible.builtin.file:
        path: /tmp/shipping.zip
        state: absent

  - name: downloading the shipping application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
      dest: /tmp/shipping.zip

  - name: unzip the shipping file
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: true


  - name: installing dependencies
    ansible.builtin.command: mvn clean package
    args:
        chdir: /app

  - name: move the jar files
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
        chdir: /app

  - name: copy user service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name : load shipping data into my sql
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: mysql.awspractice.store
      login_user: uroot 
      login_password: pRoboShop@1 
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql 
    - /app/db/master-data.sql

  - name: daemon reload and start services
    ansible.builtin.systemd_service:
      state: started
      name: user 
      enabled: yes
      daemon_reload: true