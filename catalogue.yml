- name: set up catalaogue server
  hosts: catalogue
  become: yes
  tasks:
    - name: disable nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs
      ansible.builtin.command: dnf module enable nodejs:20 -y
    
    - name: install node js
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: adding robosho user
      ansible.builtin.user:
        name: roboshop
        comment: roboshop system user
        shell: /sbin/nologin
        system: true
        home: /app

    - name: creating directory
      ansible.builtin.file:
        state: directory
        path: /app
    - name: downloading catalogue application
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
        dest: /tmp/catalogue.zip    
    
    - name: unzipping the catalogue application
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: insatll dependencies
      community.general.npm:
        path: /app

    - name: copy catalogue file
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service
    
    - name: copy mongo repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongosh client
      ansible.builtin.package:
        name: mongodb-mongosh
        state: present

    - name: connect to catalouge mongodb
      ansible.builtin.command: (mongosh mongodb.awspractice.store --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')
      register: catalogue_output
     
    - name: print the catalogue output
      ansible.builtin.debug:
        msg: "{{ catalogue_output }}" 


